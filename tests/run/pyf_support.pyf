python module pyf_support
    interface
        subroutine testone(m_hidden, m, n, arr)
            integer intent(hide), depend(m) :: m_hidden=m+1
            integer intent(in), check((m>=1) && (m_hidden <= 10)) :: m
            integer intent(in), check(n>=2) :: n = 2
            real*8 intent(out),dimension(1:m_hidden,1:n),depend(m_hidden,n) :: arr
        end subroutine


        subroutine reorders(zp, xp, yp)
            callstatement { (*f2py_func)(&xp, yp, &zp ); }
            ! The in,out of f2py corresponds to the "inout" of fwrap.
            ! The "inout" of f2py is not supported
            integer intent(in,out) :: xp, zp
            integer intent(in,out) :: yp(5)
        end subroutine

        function fort_sum_simple(n, arr) result(x)
            callstatement (*f2py_func)(&n, arr)
            real*8 intent(in), dimension(n) :: arr
            integer optional, intent(in) :: n = len(arr)
            real*8 :: x
        end function

        function fort_sum(n, arr, offx) result(x)
            callstatement (*f2py_func)(&n, arr + offx)
            real*8 intent(in), dimension(n) :: arr
            real*8 :: x
            integer intent(in) :: offx = 0
            check(offx>=0 && offx<len(arr)) :: offx
            integer optional, intent(in) :: n = (len(arr) - offx)
        end function

        subroutine intent_copy_arange(x, n)
          real*8, intent(in,out,copy), dimension(n) :: x
          integer :: n
        end subroutine

    end interface 
end python module pyf_support

